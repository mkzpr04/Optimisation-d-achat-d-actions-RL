#Mini jeu 3
#%%Stratégie d'achat fixe d'action : 1 action pendant 20 jours et 2 action jusqu'au 60ème jour
import numpy as np
sigma = 1.2
nb_jours = 60
objectif_stock = 100
S0 = 100
np.random.seed(1) #activer la reproductibilité
#diadpa
X_n=np.random.normal(0, 1, nb_jours)
X_n=np.insert(X_n, 0, 0)
S_n=np.zeros(nb_jours+1)
S_n[0]=S0
for i in range(1, nb_jours + 1):
    S_n[i]=S_n[i-1]+sigma*X_n[i]

vn=[1]*20+[2]*40
depense_totale=0
stocks_achetees=0
A_n=S0

for jour in range(nb_jours):
    if stocks_achetees >= objectif_stock:
        break
    stocks_achetees+=vn[jour]
    depense_totale+=vn[jour]*S_n[jour+1]
    A_n=((A_n*jour) + S_n[jour + 1])/(jour+1)

gain = 100 * A_n - depense_totale

print(f"Total dépensé : {depense_totale:.2f}")
print(f"Prix moyen cumulé des actions : {A_n:.2f}")
print(f"Gain net : {gain:.2f}")
print(f"nombre de stock acheté:{stocks_achetees}")

#Total dépensé : 9704.93
#Prix moyen cumulé des actions : 97.32
#Gain net : 26.69
#nombre de stock acheté:100
# En somme avec plusieurs essai, on est souvent centré autour de 0 avec parfois des gains négatif ce qui n'assure pas un gain positif.
